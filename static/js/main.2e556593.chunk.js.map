{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","api/users.ts","utils.ts","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","completed","title","id","classNames","username","getUser","usersFromServer","find","TodoList","todos","useState","setId","newTitle","setNewTitle","todoList","setTodoList","idError","setIdError","titleError","setTitleError","handleSubmit","submitEvent","preventDefault","newTodo","userId","Math","max","map","createNewTodo","current","useEffect","onSubmit","type","value","placeholder","onChange","titleEvent","test","target","selectEvent","Number","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e556593.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from './types/User';\nimport usersFromServer from './api/users';\n\nexport function getUser(id:number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n}\n","import { useState, useEffect } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUser } from '../../utils';\n\ntype Props = {\n  todos: Todo[],\n};\n\nfunction createNewTodo(\n  todos: Todo[],\n  id: number,\n  title: string,\n) {\n  return {\n    userId: id,\n    id: Math.max(...todos.map(todo => todo.id)) + 1,\n    title,\n    completed: false,\n    user: getUser(id),\n  };\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [id, setId] = useState(0);\n  const [newTitle, setNewTitle] = useState('');\n  const [todoList, setTodoList] = useState(todos);\n\n  const [idError, setIdError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const handleSubmit = (submitEvent: React.SyntheticEvent) => {\n    submitEvent.preventDefault();\n\n    setIdError(!id && true);\n    setTitleError(!newTitle && true);\n\n    if (id && newTitle) {\n      const newTodo = createNewTodo(todoList, id, newTitle);\n\n      setTodoList(current => [...current, newTodo]);\n      setNewTitle('');\n      setId(0);\n    }\n  };\n\n  useEffect(() => {\n    setIdError(id === null);\n  }, [id]);\n\n  useEffect(() => {\n    setTitleError(newTitle === null);\n  }, [newTitle]);\n\n  return (\n    <section className=\"TodoList\">\n      <form onSubmit={submitEvent => handleSubmit(submitEvent)}>\n        <label>\n          Title:\n          <input\n            data-cy=\"titleInput\"\n            type=\"text\"\n            value={newTitle}\n            placeholder=\"Enter a title\"\n            onChange={\n              (titleEvent) => setNewTitle(\n                (\n                  /\\S/.test(titleEvent.target.value)\n                    ? titleEvent.target.value\n                    : ''\n                ),\n              )\n            }\n          />\n          {titleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </label>\n\n        <label>\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={id}\n            onChange={(selectEvent) => setId(Number(selectEvent.target.value))}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {idError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </label>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      {todoList.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} data-id={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { getUser } from './utils';\nimport './App.scss';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">Static list of todos</h1>\n    <TodoList todos={todos} />\n  </div>\n);\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}