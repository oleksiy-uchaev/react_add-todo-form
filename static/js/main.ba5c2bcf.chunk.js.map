{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","utils/function.ts","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","getUser","array","find","TodoList","todos","useState","setId","newTitle","setNewTitle","todoList","setTodoList","idError","setIdError","titleError","setTitleError","handleSubmit","submitEvent","preventDefault","newTodo","userId","Math","max","map","usersFromServer","createNewTodo","current","useEffect","onSubmit","type","value","placeholder","onChange","titleEvent","test","target","selectEvent","Number","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba5c2bcf.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { User } from '../types/User';\n\nexport function getUser(id:number, array: User[]): User | null {\n  const foundUser = array.find(user => user.id === id);\n\n  return foundUser || null;\n}\n","import { useState, useEffect } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUser } from '../../utils/function';\n\ntype Props = {\n  todos: Todo[],\n};\n\nfunction createNewTodo(\n  todos: Todo[],\n  id: number,\n  title: string,\n) {\n  return {\n    userId: id,\n    id: Math.max(...todos.map(todo => todo.id)) + 1,\n    title,\n    completed: false,\n    user: getUser(id, usersFromServer),\n  };\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [id, setId] = useState(0);\n  const [newTitle, setNewTitle] = useState('');\n  const [todoList, setTodoList] = useState(todos);\n\n  const [idError, setIdError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const handleSubmit = (submitEvent: React.SyntheticEvent) => {\n    submitEvent.preventDefault();\n\n    setIdError(!id && true);\n    setTitleError(!newTitle && true);\n\n    if (id && newTitle) {\n      const newTodo = createNewTodo(todoList, id, newTitle);\n\n      setTodoList(current => [...current, newTodo]);\n      setNewTitle('');\n      setId(0);\n    }\n  };\n\n  useEffect(() => {\n    setIdError(id === null);\n  }, [id]);\n\n  useEffect(() => {\n    setTitleError(newTitle === null);\n  }, [newTitle]);\n\n  return (\n    <section className=\"TodoList\">\n      <form onSubmit={submitEvent => handleSubmit(submitEvent)}>\n        <label>\n          Title:\n          <input\n            data-cy=\"titleInput\"\n            type=\"text\"\n            value={newTitle}\n            placeholder=\"Enter a title\"\n            onChange={\n              (titleEvent) => setNewTitle(\n                (\n                  /\\S/.test(titleEvent.target.value)\n                    ? titleEvent.target.value\n                    : ''\n                ),\n              )\n            }\n          />\n          {titleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </label>\n\n        <label>\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={id}\n            onChange={(selectEvent) => setId(Number(selectEvent.target.value))}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {idError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </label>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      {todoList.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} data-id={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { getUser } from './utils/function';\nimport './App.scss';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId, usersFromServer),\n}));\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">Static list of todos</h1>\n    <TodoList todos={todos} />\n  </div>\n);\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}